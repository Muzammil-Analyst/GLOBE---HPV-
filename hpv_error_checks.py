# -*- coding: utf-8 -*-
"""HPV-Error-Checks.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FL5rt-Uk0M9Z3n2BTIxc6DTQDiCpXCAU
"""

# IMPORTING GENERAL LIBRARIES FOR DATA ANALYSIS
import numpy as np
import pandas as pd

# IMPORT FOR DATA VISUALIZATION / EDA
import matplotlib.pyplot as plt
import seaborn as sns

# Read the CSV file with specified encoding
dataHPV = pd.read_csv("13-september-2024.csv", encoding='utf-8-sig')

dataHPV.head()

dataHPV.info()



def duplicate_check(dataHPV):
    duplicate=dataHPV.duplicated().any()
    return duplicate



duplication_exist=duplicate_check(dataHPV)

if duplication_exist:
    print("Duplication is existed in the dataframe")
else:
    print("There is no duplication in dataframe")

dataHPV.columns = dataHPV.columns.str.strip()

# Get the count of null values for each column
null_counts = dataHPV.isnull().sum()

print("Null value counts for each column:")
for column, count in null_counts.items():
    print(f"{column}: {count}")

def create_error_check(dataHPV, condition, field_name, error_value, remarks):
    selected_columns = ['el_studyid','el_interviewer']
    error_checks = dataHPV.loc[condition , selected_columns]
    error_checks['Field Name'] = field_name  # Combine field names if multiple
    error_checks['Error Value'] = error_value  # Convert to strings and join
    error_checks['Remarks'] = remarks


    pd.set_option('display.max_rows', 1000)
    return error_checks



"""#Error A2 Q1.12 is (1 or 3) and Q0.2 age is (25 to 50) years ask Q2.18 to Q2.24."""

columns_to_check_nullofA1  = dataHPV.columns[107:148]  # Select columns 107 to 148

for column in columns_to_check_nullofA1:

 remarks = "If Question 1.12 is in 1 or 3 And Age is between 25 to 50 years then Q.2.18 to Q2.24 is null as count as error "
 condition = (dataHPV['sc_have_children'].isin([1, 3])) & (dataHPV['el_age'].between(25, 50)) & (dataHPV[column].isnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['ph_like_vax2']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))

result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A2.xlsx', index=True)

#No-Error





"""# Error A3 Q1.12 is (2 or 4) and Q0.2 age is (25 to 50) years don’t ask Q2.18 to Q2.24."""

subset_columns = dataHPV.loc[:, 'ph_vaccinated1':'ph_concern_vax2___17']

subset_columns

columns_to_check_nullofA1  = dataHPV.columns[207:225]  # Select columns 207 to 225

for column in columns_to_check_nullofA1:

 remarks = "If Question 1.12 isin 2 or 4 And Age is between 25 t0 50 years then Q.2.18 to Q2.24 is notnull as count as error "
 condition = (dataHPV['sc_have_children'].isin([2, 4])) & (dataHPV['el_age'].between(25, 50)) & (dataHPV[column].notnull())
 field_name = dataHPV['sc_have_children']
 error_value = dataHPV['ph_like_vax2']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A3.xlsx', index=True)

#No-Error



"""#Error: A4         Q1.12 is (1 or 3) ask Q2.31 to Q2.37"""

columns_to_check_nullofA2  = dataHPV.columns[267:273]  # Select columns 107 to 148

for column in columns_to_check_nullofA2:


 remarks = "If Question 1.12 isin 1 or 3 then Q2.31 to Q2.37 cannot be empty"
 condition = (dataHPV['sc_have_children'].isin([1, 3])) & (dataHPV[column].isnull())
 field_name = dataHPV['sc_have_children']
 error_value = dataHPV['ph_child_vax_important']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q1.12 is (1 or 3) ask Q2.31 to Q2.37.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A4.xlsx', index=True)

"""# Error A5:     Q1.9 is 1 and Q1.22 is 1 then Q4.1 cant be 2 No."""

remarks = "If Question 1.9 is yes and Question 1.22 == 1 then Question:4.1 is not equal to 2 "
condition = (dataHPV['sc_married'] == 1) & (dataHPV['sc_live_with_partner'].isin([1])) & (dataHPV['sb_sex_experience'] == 2)
field_name = dataHPV['sc_married']
error_value = dataHPV['sb_sex_experience']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result
#result.to_excel('error_report_A5.xlsx', index=True)

#NO Error

"""#     Error A6:    Q0.2 age is >=18 years then ask Q1.9 to Q1.12"""

remarks = "If Question 0.2 is greater than or equal to 18 years the ask 1.19 to 1.12"
condition = (dataHPV['el_age'] >=  18) & (dataHPV['sc_married'].isnull()) | (dataHPV['sc_married_before___1'].isnull())  | (dataHPV['sc_married_before___2'].isnull())  | (dataHPV['sc_married_before___3'].isnull()) | (dataHPV['sc_married_before___4'].isnull()) |(dataHPV['sc_age_at_married'].isnull()) | (dataHPV['sc_age_at_married_uk___99'].isnull()) | (dataHPV['sc_have_children'].isnull())
field_name = dataHPV['el_age']
error_value = dataHPV['sc_married']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A6.xlsx', index=True)
#No-Error

"""# Error:A7           Q1.9 is married 1 then ask Q1.20 to Q1.22"""

columns_to_check_nullofA3  = dataHPV.columns[86:98]  # Select columns 107 to 148

for column in columns_to_check_nullofA3:


 remarks = "If Question 1.9 is married == 1 then Question 1.20 to Question 1.22 is null count as an error "
 condition = (dataHPV['sc_married'] == 1) & (dataHPV[column].isnull())
 field_name = dataHPV['sc_married']
 error_value = dataHPV['sc_live_with_partner']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A4.xlsx', index=True)
#No-error

"""# Error A8 :          Q0.2 age is >18 years then ask Q1.26 to Q1.27"""

columns_to_check_nullofA4  = dataHPV.columns[103:109]  # Select columns 107 to 148

for column in columns_to_check_nullofA4:


 remarks = "If Question 0.2 is greater than > 18 & Question 1.24 to Question 1.26 is count as error  "
 condition = (dataHPV['el_age'] > 18) & (dataHPV[column].isnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['sc_education_level']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q0.2 age is >18 years then ask Q1.26 to Q1.27.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A4.xlsx', index=True)

"""#Error A9 :     Q0.2 age is <18 years then don’t ask Q1.24 to Q1.26"""

columns_to_check_nullofA4  = dataHPV.columns[103:109]  # Select columns 107 to 148

for column in columns_to_check_nullofA4:


 remarks = "If Question 0.2 is greater than < 18 & Question 1.24 to Question 1.26 is   not null count as error  "
 condition = (dataHPV['el_age'] < 18) & (dataHPV[column].notnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['sc_education_level']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A4.xlsx', index=True)
#No-error

"""# Error A9:         Q0.2 age is <18 years and Q0.3 is 1 then ask section 1b"""

columns_to_check_nullofA4  = dataHPV.columns[111:121]  # Select columns 110 to 120

for column in columns_to_check_nullofA4:


 remarks = "If Question 0.2 is less than 18 And Question 0.3 is Yes than section 1B is null count as error "
 condition = (dataHPV['el_age'] < 18 & (dataHPV ['el_emancipated'] == 1)) & (dataHPV[column].isnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['sc_hh_computer']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A4.xlsx', index=True)
#No-Error

"""# Error A10:          Q0.2 age is b/w 21 to 50 years then ask Q2.4 to Q2.13"""

columns_to_check_nullofA5  = dataHPV.columns[139:180]  # Select columns 139 to 180

for column in columns_to_check_nullofA5:

 remarks = "If question 0.2 age is Between 21 to 50 years the Question 2.4 to Question 2.13 if Null count as error "
 condition =  (dataHPV['el_age'].between(21,50)) & (dataHPV[column].isnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['ph_have_screened']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error A11:  Q0.2 age is b/w 9 to 24 years and Q2.14 is Yes then ask Q2.18 to Q2.24

"""

columns_to_check_nullofA6  = dataHPV.columns[183:241]  # Select columns 183 to 241

for column in columns_to_check_nullofA6:

 remarks = "If question 0.2 age is Between 9 to 24 years and Question 2.14 is yes then  Question 2.18 to Q2.24 isnull count as an error"
 condition =  (dataHPV['el_age'].between(9,24)) & (dataHPV['ph_about_vax'] == 1) & (dataHPV[column].isnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['ph_vaccinated1']
result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error A12:          Q0.2 age is b/w 25 to 50 years and Q1.12 is (1 or 3) then ask Q2.18 to Q2.24"""

columns_to_check_nullofA6  = dataHPV.columns[183:241]  # Select columns 206 to 259

for column in columns_to_check_nullofA6:

 remarks = "If question 0.2 age is Between 25 to 50 years and Question: 1.12 is 1 or 3 then Q2.18 to Q.2.24 if null count as error "
 condition =  (dataHPV['el_age'].between(25,50)) & (dataHPV['sc_have_children'].isin([1, 3])) & (dataHPV[column].isnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['ph_vaccinated1']
result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error A13 :Q0.2 age is b/w 25 to 50 years, Q1.12 is (2 or 4) and Q1.14 is (2 or 4) then don’t ask Q2.18 to Q2.24"""

columns_to_check_nullofA6  = dataHPV.columns[190:242]  # Select columns 206 to 259

for column in columns_to_check_nullofA6:


 remarks = "If question 0.2 age is Between 25 to 50 years and Question: 1.12 is 2 or 4  and Question: 1.14 is 2 or 4 then Q2.18 to Q.2.24 if null count as error "
 condition =  (dataHPV['el_age'].between(25,50)) & (dataHPV['sc_have_children'].isin([2, 4])) & (dataHPV['sc_education_partner'].isin([2, 4])) & (dataHPV[column].notnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['ph_like_vax2']
 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel("Error_file.xlsx", index=True)
#No-error



"""# Error A14: Q1.12 is (1 or 3) and Q2.14 is Yes then ask Q2.25 to Q2.37"""

columns_to_check_nullofA7  = dataHPV.columns[261:273]  # Select columns 260 to 272

for column in columns_to_check_nullofA7:

 remarks = "If Question 1.12 is 1 0r 3 and Question 2.14 is yes then Question 2.25 to Question 2.37 cannot be null  "
 condition =  (dataHPV['sc_have_children'].isin([1, 3])) & (dataHPV['ph_about_vax']==1) & (dataHPV[column].isnull())
 field_name = dataHPV['sc_have_children']
 error_value = dataHPV['ph_vax_important']
result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error A15: Question:0.2 < 18 Then Don't ask Question 3.6 to 3.8"""

columns_to_check_nullofA8  = dataHPV.columns[286:292]  # Select columns 285 to 291

for column in columns_to_check_nullofA8:


 remarks = "If question 0.2 age is < less then 18 and if Question:3.6 to 3.8 found filled found as an error "
 condition =  (dataHPV['el_age'] < 18 ) & (dataHPV[column].notnull())
 field_name = dataHPV['el_age']
 error_value = dataHPV['mv_vagina_clean']
 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error A16: Q4.1 is No Then Q4.24 And Q4.25 Should not be Null and Q4.26 to Q4.30 Not Filled count As an error"""

columns_to_check_nullofA8  = dataHPV.columns[332:355]  # Select columns 285 to 291

for column in columns_to_check_nullofA8:


 remarks = "Q4.1 is No Then Q4.24 And Q4.25 Should not be Null and Q4.26 to Q4.30 Not Filled count As an error"
 condition =  (dataHPV['sb_sex_experience'] == 2 ) & (dataHPV['sb_sex_oral']).isnull() & (dataHPV['sb_sex_anal']).isnull() | (dataHPV[column].isnull())
 field_name = dataHPV['sb_sex_experience']
 error_value = dataHPV['sb_sex_oral']
 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error A17: Q:1.18 is No then Don't ask Q:6.1 to Q:6.3"""

columns_to_check_nullofA8  = dataHPV.columns[379:381]  # Select columns 285 to 291

for column in columns_to_check_nullofA8:


 remarks = "If Question 1.18 is No then don't ask Q:6.1 to Q:6.3 "
 condition =  (dataHPV['sc_have_job'] == 2)& (dataHPV[column].notnull())
 field_name = dataHPV['sc_have_job']
 error_value = dataHPV['gw_using_decision']

 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""# Error A18: Q6.9 Cannot be 99(Don't know) Or 97(Don't want to respond)

"""

remarks = "If Question 6.8 to 6.11 == 99 | Question 6.8 to 6.11 == 97 Count as an error  "
condition =  (dataHPV['gw_sexual_comments'] == 99|97) | (dataHPV['gw_men_hurts_women'] == 99 | 97) | (dataHPV['gw_men_assault'] == 99 |97 )|(dataHPV['gw_women_trade_sex'] == 99|97)
field_name = dataHPV['gw_men_hurts_women']
error_value = dataHPV['gw_men_hurts_women']
result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
result.to_excel('Question 6.8 to 6.11 == 97 Count as an error.xlsx', index=True)

"""# Error A19 Question 2.24 cannot be Not Concerned count as an error

"""

remarks = " Question 2.24 cannot be No Concerned (Option 17) count as an error"
condition = dataHPV['ph_concern_vax1___17'] == 1
field_name = dataHPV['ph_concern_vax1___17']
error_value = dataHPV['ph_concern_vax1___17']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Question 2.24 cannot be Not Concerned count as an error.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error A20: Did the participant require consent of a male (husband, father, brother, other) to participate?' is marked as 'Yes'. However, 'Who is chaperoning the participant? is marked as 'Mother/female Guardian or Other female family member or Other female'. Please correct or clarify."""

remarks = "If Question 0.7 is yes and Question 0.14 is Option 2 or 4 Count as error "
condition =(dataHPV['el_require_male'] == 1) & (dataHPV['el_chaperone'] == 2)
field_name = dataHPV['el_require_male']
error_value = dataHPV['el_chaperone']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Question 0.7 is yes and Question 0.14 is Option 2 or 4 Count as error.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error A21:'Do you have any children?' is marked as 'No'. However, 'Who lives in your household most of the time?' is marked as 'Own Children'. Please correct or clarify."""

remarks = "If Question 1.12 is  No and Question 1.14 is marked as 5 (Own Children) Count as error "
condition =(dataHPV['sc_have_children'] == 4) & (dataHPV['sc_most_live_mm___5']== 1)
field_name = dataHPV['sc_have_children']
error_value = dataHPV['sc_most_live_mm___5']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Do you have any children is marked as No Who Lives Most of the time marked as own Children .xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#The Participant  has childeren but all are above 18 years old



"""#Error A23:Q4.1 reported never had sex though has children (Q1.12) and living with husband (Q1.22) (query opened)"""

remarks = "If Question 4.1 == 2 and Question 1.12 is 1 or 2 or 3 and Question 1.22 == 3"
condition =  (dataHPV['sb_sex_experience'] == 2 ) & (dataHPV['sc_have_children'] == 1 |2 |3 )
field_name = dataHPV['sb_sex_experience']
error_value = dataHPV['sc_have_children']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error:Q6.8, Q6.9 -> DK"""

remarks = "If Question 6.8 is 99 o 97 and Question 6.9 is 99 or 97 found as an error "
condition =  (dataHPV['gw_sexual_comments'] == 99|97 ) | (dataHPV['gw_men_hurts_women'] == 99|97)
field_name = dataHPV['gw_sexual_comments']
error_value = dataHPV['gw_sexual_comments']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Q6.8, Q6.9 -> DK.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q4.30 (contraception) -> don't want to respond"""

remarks = "If Question 4.30 is Don't want to respond count as an error  "
condition =  (dataHPV['sb_avoid_preg___97'] == 1 )
field_name = dataHPV['sb_avoid_preg___97']
error_value = dataHPV['sb_avoid_preg___97']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q4.30 (contraception) -> dont want to respond.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q2.22 (intention to be vaccinated) -> DK"""

remarks = "If Question 2.22 is Don't want to respond count as an error  "
condition =  (dataHPV['ph_like_vax2'] == 99 )
field_name = dataHPV['ph_like_vax2']
error_value = dataHPV['ph_like_vax2']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)

#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q2.22 (intention to be vaccinated) -> DK.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q6.20 (non-sexual partner unwanted sex) -> Don't want to respond"""

remarks = "If Question 6.20 is Don't want to respond count as an error   "
condition =  (dataHPV['gw_sex_with_other'] == 97 )
field_name = dataHPV['gw_sex_with_other']
error_value = dataHPV['gw_sex_with_other']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q6.20 (non-sexual partner unwanted sex) -> Dont want to respond.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q4.21 when was the last time you had sex -> Don't want to respond"""

remarks = "If Question 4.21 is Don't want to respond count as an error "
condition =  (dataHPV['sb_last_sex'] == 97 )
field_name = dataHPV['sb_last_sex']
error_value = dataHPV['sb_last_sex']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Q4.21 when was the last time you had sex -> Dont want to respond.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
# all of these are saudi-e-arabia

"""#Error:Q6.10 -> DK"""

remarks = "If Question 6.10 is Don't know count as an error  "
condition =  (dataHPV['gw_men_assault'] == 99 )
field_name = dataHPV['gw_men_assault']
error_value = dataHPV['gw_men_assault']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q6.10 -> DK.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q6.15 IPV slapped -> Don't want to respond"""

remarks = "If Question 6.15 is Don't want to respond count as an error   "
condition =  (dataHPV['gw_physically_hurt'] == 97 )
field_name = dataHPV['gw_physically_hurt']
error_value = dataHPV['gw_physically_hurt']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q6.15 IPV slapped -> Dont want to respond.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q2.11 don't want to be screened, Q2.12 don't know benefit, Q2.13 no concern. Should it be don't know?"""

remarks = "If Question 2.11 is Don't want to respond and Question 2.12 is Don,t know benefits and Question 2.13 is no concern   "
condition =  (dataHPV['ph_want_screen_again'] == 99 ) & (dataHPV['ph_benefits_scrn___6'] == 1 ) & (dataHPV['ph_concern_scrn___12'] == 1 )
field_name = dataHPV['ph_want_screen_again']
error_value = dataHPV['ph_concern_scrn___12']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q2.11 -> Dk Q2.12 Donot Know benefits Q2.13-->No_Concern.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q2.22 (intention to be vaccinated) -> DK, Q2.24 no response -> consider answering "Don' know"
"""

remarks = "If Question 2.22 is Don't know and Question 2.24 is No response found count as error "
condition =  (dataHPV['ph_like_vax1'] == 99 ) & (dataHPV['ph_benefits_scrn___6'] == 1 ) & (dataHPV['ph_concern_scrn___12'] == 1 )
field_name = dataHPV['ph_want_screen_again']
error_value = dataHPV['ph_concern_scrn___12']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#ErrorQ6.8-Q6.11 -> DK"""

remarks = "If Question 6.8 to Question 6.11 is Don't Know Count as an error"
condition =  (dataHPV['gw_sexual_comments'] == 99 ) & (dataHPV['gw_men_hurts_women'] == 99 )  & (dataHPV['gw_men_assault'] == 99 ) & (dataHPV['gw_women_trade_sex'] == 99 )
field_name = dataHPV['gw_sexual_comments']
error_value = dataHPV['gw_women_trade_sex']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q6.8-Q6.11 -> DK.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q2.22-Q2.24, Q2.31-Q2.37 missing"""

columns_to_check_nullofA20  = dataHPV.columns[225:241]  #For Question 2.24

for column in columns_to_check_nullofA20:



 remarks = "If Question 2.22 is and Question 2.24 is Missing with 2.31 to 2.37 "
 condition =  (dataHPV['ph_like_vax1']).isnull() & (dataHPV[column].isnull())
 field_name = dataHPV['ph_like_vax1']
 error_value = dataHPV['ph_like_vax1']

 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
 result.reset_index(drop=True, inplace=True)
 result.index += 1
 result
#result.to_excel('error_report_A1.xlsx', index=True)

columns_to_check_nullofA20  = dataHPV.columns[267:273]   #For Question 2.31 to 2.37

for column in columns_to_check_nullofA20:



 remarks = "If Question 2.22 is and Question 2.24 is Missing with 2.31 to 2.37 "
 condition =  (dataHPV['ph_like_vax1']).isnull() & (dataHPV[column].isnull())
 field_name = dataHPV['ph_like_vax1']
 error_value = dataHPV['ph_like_vax1']

 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error:Q1.13 living with 12 household members, Q4.26 indicates 10 livebirth. Q1.14 only checked partner and own children."""

remarks = "If Question 1.13 is Greater tha Question 4.26 and Question 1.14 is checked with only partner and own children count as an error  "
condition =  (dataHPV['sc_hh_size'] > dataHPV['sb_pr_livebirth']) & (dataHPV['sc_most_live_mm___1']== 1 ) & (dataHPV['sc_most_live_mm___5'] == 1 )
field_name = dataHPV['sc_hh_size']
error_value = dataHPV['sb_pr_livebirth']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error:Q1.24 husband spending 4 nights outside home per month, but Q1.14 living with husband most of the time.

"""

remarks = "If Question 1.24 is yes and Question 1.14 is living most of the time count as an error  "
condition =  (dataHPV['sc_partner_night_out'] == 1 ) & (dataHPV['sc_live_with_partner'] == 2 )
field_name = dataHPV['sc_partner_night_out']
error_value = dataHPV['sc_live_with_partner']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Spend_4_Nights_live_most_of_time.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q2.24 (concerns about HPV vaccine): husband objection, but she is not married (query opened)"""

remarks = "If Question 2.24 is marked as 12 and She is not married is count as an error Question 1.9  "
condition =  (dataHPV['ph_concern_vax2___12'] == 1 ) & (dataHPV['sc_married'] == 2 )
field_name = dataHPV['ph_concern_vax2___12']
error_value = dataHPV['sc_married']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error:Q2.22 missing. Any reason? (query opened)"""

remarks = "If Question 2.22 is Null count as error  "
condition =  (dataHPV['ph_like_vax2']).isnull()
field_name = dataHPV['ph_like_vax2']
error_value = dataHPV['ph_like_vax2']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error:Age 11, but lived in this community for 15 years (Q0.9) (query opened)"""

remarks = "If Age is less than the lived in this Community count as an  error"
condition =  (dataHPV['el_age'] < dataHPV['el_live_year'] )
field_name = dataHPV['el_live_year']
error_value = dataHPV['el_age']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age_is_less_then_Coummnity_lived.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q1b.2 reported adult participant/emancipated minor"""

remarks = "If Age is Greater than 18 and Question 1b.2 marked as emancipated minor count as an error "
condition =  (dataHPV['el_age'] > 18 ) & (dataHPV['sc_hh_answer_person'] == 1 )
field_name = dataHPV['el_age']
error_value = dataHPV['sc_hh_answer_person']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#Error: Question 0.2 is between 9 to 14 cannot be In-Private"""

remarks = "If Age is Between 9 to 14 cannot be In-private "
condition =(dataHPV['el_age'].between(9, 14)) & (dataHPV['el_need_chaperone'] == 1 )
field_name = dataHPV['el_age']
error_value = dataHPV['el_need_chaperone']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Question 0.2 is between 9 to 14 cannot be In-Private.xlsx'
result.to_excel(result_output_file, index=True)
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error: If Question 0.2 is < 18 than 1.9 should be NO"""

remarks = "If Age is < 18 then 1.9 should be No "
condition = (dataHPV['el_age'] < 18 ) & (dataHPV['sc_married'] == 2 ) & (dataHPV['el_need_chaperone'] == 2 )
field_name = dataHPV['el_age']
error_value = dataHPV['sc_married']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'If Question 0.2 is < 18 than 1.9 should be NO.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error : 'Do you have any children?' is marked as 'Yes'. However, 'Who lives in your household most of the time?' is not marked as 'Own Children'. Please correct or clarify."""

remarks = "If Question 1.12 is  No and Question 1.14 is marked as 5 (Own Children) Count as error "
condition =(dataHPV['sc_have_children'] == 1 | 2 | 3) & (dataHPV['sc_most_live_mm___5']== 0)
field_name = dataHPV['sc_have_children']
error_value = dataHPV['sc_most_live_mm___5']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = ' Do you have any children is marked as Yes.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""Error: The sum of 'Live birth' and 'Miscarriage or stillbirth' and 'Medical abortion' is not same as 'How many times have you been pregnant in total?'. Please correct or clarify."""

remarks = "If Question 4.27  is  Not equal to Question 4.28 count as an  error  "
condition = (dataHPV['sb_preg_times'] ) != (dataHPV['sb_pr_livebirth'] & (dataHPV['sb_pr_miscarriage'] ) &  (dataHPV['sb_pr_abortion']))
field_name = dataHPV['sb_preg_times']
error_value = dataHPV['sb_pr_livebirth']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Do you have any children is marked as No Who Lives Most of the time marked as own Children .xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error: Is the participant completing this questionnaire in private, or is a chaperone required? Age Under 17 years, is a chaperone present?"""

remarks = "If Age is under 17 and Chaperone is not marked count as an error  "
condition =(dataHPV['el_age'] <  17 ) & (dataHPV['el_need_chaperone'] != 2 )
field_name = dataHPV['el_age']
error_value = dataHPV['el_need_chaperone']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Age Under 17 years, is a chaperone present.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error: Q1.13 household size more than 1- how many boxes checked on Q1.14."""

columns_to_check_nullofA8  = dataHPV.columns[61:68]  # Select columns 285 to 291

for column in columns_to_check_nullofA8:


 remarks = "Q1.13 household size more than 1- how many boxes checked on Q1.14 is null count as error  "
 condition =  (dataHPV['sc_hh_size'] > 1)& (dataHPV['sc_most_live_mm___5'] != 1)
 field_name = dataHPV['sc_hh_size']
 error_value = dataHPV['sc_most_live_mm___5']

 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error :  Question 4.17 is not selected as per 0.2 and 1.11 difference count as error"""

dataHPV['diff_age'] = dataHPV['el_age'] - dataHPV['sb_1st_sex_age']

dataHPV['diff_age1'] = dataHPV['sc_age_at_married'] - dataHPV['sb_1st_sex_age']

remarks = "Question 4.17 is not selected as per 0.2 and 1.11 difference count as error"
condition = (
    (
        (dataHPV['diff_age'] > 0) & (dataHPV['diff_age'] < 1)&(dataHPV['sb_sex_period'] != 1)|
        (dataHPV['diff_age'] >=1) & (dataHPV['diff_age'] <5) & (dataHPV['sb_sex_period'] != 2)|
        (dataHPV['diff_age'] >=5) &   (dataHPV['diff_age'] <10) & (dataHPV['sb_sex_period'] != 3)|
        (dataHPV['diff_age'] >=10) & (dataHPV['diff_age'] <20)& (dataHPV['sb_sex_period'] != 4)|
        (dataHPV['diff_age'] >=20)&  (dataHPV['diff_age'] <30) & (dataHPV['sb_sex_period'] != 5)
    )
)
field_name = dataHPV['diff_age']
error_value = dataHPV['sb_sex_period']
#diff_age=dataHPV['diff_age']
#diff_age1=dataHPV['diff_age1']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Question 4.17 is not selected as per 0.2 and 1.11 difference for CSS.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

remarks = "Question 4.17 is not selected as per 0.2 and 1.11 difference count as error"
condition = (
    (
        (dataHPV['diff_age'] > 0) & (dataHPV['diff_age'] < 1)&(dataHPV['sb_relation_period'] != 1)|
        (dataHPV['diff_age'] >=1) & (dataHPV['diff_age'] <5) & (dataHPV['sb_relation_period'] != 2)|
        (dataHPV['diff_age'] >=5) &   (dataHPV['diff_age'] <10) & (dataHPV['sb_relation_period'] != 3)|
        (dataHPV['diff_age'] >=10) & (dataHPV['diff_age'] <20)& (dataHPV['sb_relation_period'] != 4)|
        (dataHPV['diff_age'] >=20)&  (dataHPV['diff_age'] <30) & (dataHPV['sb_relation_period'] != 5)
    )
)
field_name = dataHPV['diff_age']
error_value = dataHPV['sb_sex_period']
#diff_age=dataHPV['diff_age']
#diff_age1=dataHPV['diff_age1']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Question 4.17 is not selected as per 0.2 and 1.11 difference for CSS.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error:Q1.9 is Yes and Q1.22 is marked (1 or 2) then Q4.1 can’t be 2."""

remarks = "If Q1.9 is Yes and Q1.22 is marked  1 or 2 then Q4.1 cannot be 2   "
condition =(dataHPV['sc_married'] == 1 ) & (dataHPV['sc_live_with_partner'] == 1  ) | (dataHPV['sc_live_with_partner'] == 2 ) & (dataHPV['sb_sex_experience'] == 2 )
field_name = dataHPV['sc_live_with_partner']
error_value = dataHPV['sb_sex_experience']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q1.9 is Yes and Q1.22 is marked (1 or 2) then Q4.1 can’t be 2.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#Error : Q 1.12 is marked with having children then Q4.1 also yes then Q4.26 can't be no."""

remarks = "Q 1.12 is marked with having children then Q4.1 also yes then Q4.26 can't be no count as an error "
condition =(dataHPV['sc_have_children'] == 1)  & (dataHPV['sb_sex_experience'] == 1) & (dataHPV['sb_preg'] == 3 )
field_name = 'sb_sex_experience'
error_value = dataHPV['sb_preg']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Q 1.12 is marked with  having children = 1 then Q4.1 also yes then Q4.26 cant be no.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error : Q 1.12 is marked with having children then Q4.1 also yes then Q4.26 can't be no."""

remarks = "Q 1.12 is marked with having children then Q4.1 also yes then Q4.26 can't be no count as an error "
condition =(dataHPV['sc_have_children'] == 2)  & (dataHPV['sb_sex_experience'] == 1) & (dataHPV['sb_preg'] == 3 )
field_name = dataHPV['sb_sex_experience']
error_value = dataHPV['sb_preg']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q 1.12 is marked with having children = 2 then Q4.1 also yes then Q4.26 cant be no.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

remarks = "Q 1.12 is marked with having children then Q4.1 also yes then Q4.26 can't be no count as an error "
condition =(dataHPV['sc_have_children'] == 3)  & (dataHPV['sb_sex_experience'] == 1) & (dataHPV['sb_preg'] == 3 )
field_name = dataHPV['sb_sex_experience']
error_value = dataHPV['sb_preg']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Q 1.12 is marked with having children then Q4.1 also yes then Q4.26 cant be no count as an error .xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error : Question 0.2 is not equal to Question 0.4"""

remarks = "Question 0.2 is not equal to Question 0.4 count as an error "
condition = dataHPV['el_interview_dt'] != dataHPV['el_consent_dt']
field_name = dataHPV['el_consent_dt']
error_value = dataHPV['el_interview_dt']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age Under 17 years, is a chaperone present.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error: Date of Interview != Date of Consent and Date of sample"""

dataHPV['diff_Int'] = dataHPV['el_interview_dt'] != dataHPV['el_consent_dt']

remarks = "Question Date of Interview Not Equal to Date of Consent and Date of sample Not equal count as error  "
condition = (dataHPV['sp_consent_stored'] == 1)  & (dataHPV['el_interview_dt'])  != (dataHPV['sp_urine_sample_dt'])
field_name = dataHPV['el_interview_dt']
error_value = dataHPV['sp_urine_sample_dt']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age Under 17 years, is a chaperone present.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

remarks = "Question Date of Interview Not Equal to Date of Consent and Date of sample Not equal count as error  "
condition = (dataHPV['sp_consent_stored'] == 1)  & (dataHPV['el_consent_dt'])  == (dataHPV['sp_urine_sample_dt'])
field_name = dataHPV['el_consent_dt']
error_value = dataHPV['sp_urine_sample_dt']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age Under 17 years, is a chaperone present.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

remarks = "Question Date of Interview Not Equal to Date of Consent and Date of sample Not equal count as error  "
condition = (dataHPV['sp_consent_stored'] == 1)  & (dataHPV['el_consent_dt'])  != (dataHPV['sp_urine_sample_dt'])
field_name = dataHPV['el_interview_dt']
error_value = dataHPV['sp_urine_sample_dt']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age Under 17 years, is a chaperone present.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error: 0.2 is less then 18 and 1.9 is yes then Section 1b.5a Should be No"""

columns_to_check_nullofA8  = dataHPV.columns[116:121]  # Select columns 285 to 291

for column in columns_to_check_nullofA8:


 remarks = "If Question 0.2 is less then 18 and 1.9 is yes then Section 1b.5a is yes Count as an error "
 condition =  (dataHPV['el_age'] < 18 ) & (dataHPV['el_need_chaperone'] == 2 ) & (dataHPV['sc_married'] == 1 ) & (dataHPV[column] == 2)
 field_name = dataHPV['el_age']
 error_value = dataHPV['sc_hh_radio']

 result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = '0.2 is less then 18 and 1.9 is yes then Section .xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error :Have Your ever been tested for HIV? Yes"""

remarks = "Have Your ever been tested for HIV : yes "
condition =(dataHPV['st_have_hiv_test'] == 1)
field_name = dataHPV['st_have_hiv_test']
error_value = dataHPV['st_have_hiv_test']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Have Your ever been tested for HIV.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#     Error Checks For LS (GLOBE-HPV)

# Error LS : Question 4.2 is > greater then Question 4.9 Marked as 1 and 4.16 is marked as 1 Count as error
"""



remarks = "If Question 4.2 is greater then  Question 4.9 marekd as 1 and 4.16 is also marekd as 1 count as an error "
condition =(dataHPV['sb_sex_count_last']  >  (dataHPV['sb_sex_period']== 1) & (dataHPV['sb_relation_period']== 1))
field_name = dataHPV['sb_sex_period']
error_value = dataHPV['sb_sex_count_last']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Do you have any children is marked as No Who Lives Most of the time marked as own Children .xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""# Error : Question 0.2 found Empty Count as an error"""

remarks = "If Question 0.2 found null count as an error "
condition =(dataHPV['el_age']).isnull()
field_name = dataHPV['el_age']
error_value = dataHPV['el_age']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Do you have any children is marked as No Who Lives Most of the time marked as own Children .xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#Error: Question: 1.10 is Marked as having Children and Q:1.12 is not marked 5 count as an error"""

remarks = "If Question 1.10 is marked as 1 or 2 or 3 and Question 1.12 is not marked 5 count as error  "
condition =(dataHPV['sc_have_children'] == 1 | 2 | 3)  & (dataHPV['sc_most_live_mm___5'] ==0)
field_name = dataHPV['sc_have_children']
error_value = dataHPV['sc_most_live_mm___5']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Question: 1.10 is Marked as having Children and Q:1.12 is not marked 5 .xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error: If Age is less than the lived in this Community count as an  error"""

remarks = "If Age is less than the lived in this Community count as an  error"
condition =  (dataHPV['el_age'] < dataHPV['el_live_year'] )
field_name = dataHPV['el_live_year']
error_value = dataHPV['el_age']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age_is_less_then_Coummnity_lived.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#Error: Question 1.8 is marked as 1 and Question 1.12 is not marked as partner and Husband"""

remarks = "Question 1.8 is marked as 1 and Question 1.12 is not marked as partner and Husband count as an error "
condition =(dataHPV['sc_married'] == 1 )  & (dataHPV['sc_most_live_mm___1'] ==0)
field_name = dataHPV['sc_married']
error_value = dataHPV['sc_most_live_mm___1']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Do you have any children is marked as No Who Lives Most of the time marked as own Children .xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#Error:Q1.21 husband spending 4 nights outside home per month, but Q1.20 living with husband most of the time."""

remarks = "If Question 1.21 is yes and Question 1.20 is living most of the time count as an error  "
condition =  (dataHPV['sc_partner_night_out'] == 1 ) & (dataHPV['sc_live_with_partner'] == 2 )
field_name = dataHPV['sc_partner_night_out']
error_value = dataHPV['sc_live_with_partner']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Spend_4_Nights_live_most_of_time.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error : Question 1.8 is Yes then Question 4.1 cannot be Dont want to respond and 4.2 cannot be null"""

remarks = "If Question 1.8 is Yes then Question 4.1 cannot be dont want to respond and 4.2 cannot be null"
condition =  (dataHPV['sc_married'] == 1 ) & (dataHPV['sb_sex_count_last_dr___97'] == 1 ) &  (dataHPV['sb_sex_count_last']).isnull()
field_name = dataHPV['sc_married']
error_value = dataHPV['sb_sex_count_last']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Spend_4_Nights_live_most_of_time.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-error

"""#Error : Did the participant require consent of a male (husband, father, brother, other) to participate?' is marked as 'Yes'. However, 'Who is chaperoning the participant? is marked as 'Mother/female Guardian or Other female family member or Other female'. Please correct or clarify."""

remarks = "If Question 0.4 is yes and Question 0.14 is Option 2 or 4 Count as error "
condition =(dataHPV['el_require_male'] == 1) & (dataHPV['el_chaperone'] == 2)
field_name = dataHPV['el_require_male']
error_value = dataHPV['el_chaperone']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A1.xlsx', index=True)
#No-Error

"""#Error A21:'Do you have any children?' is marked as 'No'. However, 'Who lives in your household most of the time?' is marked as 'Own Children'. Please correct or clarify."""

remarks = "If Question 1.10 is  No and Question 1.12 is marked as 5 (Own Children) Count as error "
condition =(dataHPV['sc_have_children'] == 4) & (dataHPV['sc_most_live_mm___5']== 1)
field_name = dataHPV['sc_have_children']
error_value = dataHPV['sc_most_live_mm___5']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Do you have any children is marked as No Who Lives Most of the time marked as own Children .xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error : Question 1.8 is married Yes  then Question 1.18 to Question 1.20 is null count as an error"""

columns_to_check_nullofA3  = dataHPV.columns[78:90]  # Select columns 107 to 148

for column in columns_to_check_nullofA3:


 remarks = "If Question 1.8 is married == 1 then Question 1.18 to Question 1.20 is null count as an error "
 condition = (dataHPV['sc_married'] == 1) & (dataHPV[column].isnull())
 field_name = dataHPV['sc_married']
 error_value = dataHPV['sc_live_with_partner']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A4.xlsx', index=True)
#No-error

remarks = "If Age is Between 9 to 14 cannot be In-private "
condition =(dataHPV['el_age'].between(9, 14)) & (dataHPV['el_need_chaperone'] == 1 )
field_name = dataHPV['el_age']
error_value = dataHPV['el_need_chaperone']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A4.xlsx', index=True)
#No-error

"""#Error:Q4.25 currently pregnant, Q4.26 total number of pregnancy 6, but Q4.27 live birth 7, miscarriage 2. Numbers do not match"""

remarks = "If Q4.25 is currently pregnant and Q4.26  value Donot match with Q4.27 count as error "
condition = (dataHPV['sb_preg'] !=1) & (dataHPV['sb_preg_times'] != dataHPV['sb_pr_livebirth']) & dataHPV['sb_pr_miscarriage'].isnull()
field_name = dataHPV['sb_preg_times']
error_value = dataHPV['sb_pr_miscarriage']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result
#result.to_excel('error_report_A4.xlsx', index=True)
#No-error

remarks = "If Q4.25 is Previously pregnant and Q4.26 is greater then Q4.27  count as error "
condition = (dataHPV['sb_preg'] ==2) & (dataHPV['sb_preg_times'] < dataHPV['sb_pr_livebirth'])
field_name = dataHPV['sb_pr_livebirth']
error_value = dataHPV['sb_preg_times']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Q4.25 is Previously pregnant and Q4.26 is greater then Q4.27 count as error.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error : How long have you lived here? Should be less than or equal to Q0.2- How old were you at your last birthday?"""

remarks = "Question 0.6 Should be less then or equal to 0.2 if not found count as an  error "
condition = (dataHPV['el_live_year']) > (dataHPV['el_age'])
field_name = dataHPV['el_age']
error_value = dataHPV['el_live_year']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'How long have you lived here? Should be less than or equal to Q0.2- How old were you at your last birthday?.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

remarks = "Question 0.6 Should be less then or equal to 0.2 if not found count as an  error "
condition = (dataHPV['el_live_year']) != (dataHPV['el_age'])
field_name = dataHPV['el_age']
error_value = dataHPV['el_live_year']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)


#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Q4.25 is Previously pregnant and Q4.26 is greater then Q4.27 count as error.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

"""#Error: Interviewer: Is the participant completing this questionnaire in private, or is a chaperone required? Age Under 17 years, is a chaperone present?"""

remarks = "If Age is under 17 and Chaperone is not marked count as an error  "
condition =(dataHPV['el_age'] <  17 ) & (dataHPV['el_need_chaperone'] != 2 )
field_name = dataHPV['el_age']
error_value = dataHPV['el_need_chaperone']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)




#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
#result_output_file = 'Age Under 17 years, is a chaperone present.xlsx'
#result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)

dataHPV['diff_age'] = dataHPV['el_age'] - dataHPV['sc_age_at_married']

remarks = "Question 4.9 is not selected as per 0.2 and 1.19 difference count as error"
condition = (
    (
        (dataHPV['diff_age'] > 0) & (dataHPV['diff_age'] < 1)&(dataHPV['sb_sex_period'] != 1)|
        (dataHPV['diff_age'] >=1) & (dataHPV['diff_age'] <5) & (dataHPV['sb_sex_period'] != 2)|
        (dataHPV['diff_age'] >=5) &   (dataHPV['diff_age'] <10) & (dataHPV['sb_sex_period'] != 3)|
        (dataHPV['diff_age'] >=10) & (dataHPV['diff_age'] <20)& (dataHPV['sb_sex_period'] != 4)|
        (dataHPV['diff_age'] >=20)&  (dataHPV['diff_age'] <30) & (dataHPV['sb_sex_period'] != 5)
    )
)
field_name = dataHPV['diff_age']
error_value = dataHPV['sb_sex_period']
#diff_age=dataHPV['diff_age']
#diff_age1=dataHPV['diff_age1']

result = create_error_check(dataHPV, condition, field_name, error_value, remarks)



#field_name_class_str = str(type(field_name))
result.reset_index(drop=True, inplace=True)
result.index += 1
result_output_file = 'Question 4.9 is not selected as per 0.2 and 1.9 difference for LS.xlsx'
result.to_excel(result_output_file, index=True)
result
#result.to_excel('error_report_A1.xlsx', index=True)